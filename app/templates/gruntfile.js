// Generated by CoffeeScript 1.7.1
"use strict";
module.exports = function(grunt) {
  var appConfig;
  require("load-grunt-tasks")(grunt);
  require("time-grunt")(grunt);
  appConfig = {
    app: require("./bower.json").appPath || "app",
    dist: "dist",
    tmp: ".tmp",
    host: require("ip").address()
  };
  grunt.initConfig({
    yeoman: appConfig,
    watch: {
      bower: {
        files: ["bower.json"],
        tasks: ["wiredep"]
      },
      coffee: {
        files: ["<%= yeoman.app %>/scripts/{,*/}*.{coffee,litcoffee,coffee.md}"],
        tasks: ["newer:coffee:dist"]
      },
      coffeeTest: {
        files: ["test/spec/{,*/}*.{coffee,litcoffee,coffee.md}"],
        tasks: ["newer:coffee:test", "karma"]
      },
      compass: {
        files: ["<%= yeoman.app %>/styles/{,*/}*.{scss,sass}"],
        tasks: ["compass:server", "autoprefixer"]
      },
      stylus: {
        files: ["<%= yeoman.app %>/styles/{,*/}*.{styl}"],
        tasks: ["stylus", "autoprefixer"]
      },
      gruntfile: {
        files: ["Gruntfile.js"]
      },
      livereload: {
        options: {
          livereload: "<%= connect.options.livereload %>"
        },
        files: ["<%= yeoman.app %>/{,*/}*.html", ".tmp/styles/{,*/}*.css", ".tmp/scripts/{,*/}*.js", "<%= yeoman.app %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}"]
      },
      jade: {
        files: ["<%= yeoman.app %>/{,*/}*.jade"],
        options: {
          livereload: true
        },
        tasks: ["jade"]
      }
    },
    connect: {
      options: {
        port: 9000,
        hostname: "<%= yeoman.host %>",
        livereload: 35729
      },
      livereload: {
        options: {
          open: true,
          middleware: function(connect) {
            return [connect["static"](".tmp"), connect().use("/bower_components", connect["static"]("./bower_components")), connect["static"](appConfig.app)];
          }
        }
      },
      test: {
        options: {
          port: 9001,
          middleware: function(connect) {
            return [connect["static"](".tmp"), connect["static"]("test"), connect().use("/bower_components", connect["static"]("./bower_components")), connect["static"](appConfig.app)];
          }
        }
      },
      dist: {
        options: {
          open: true,
          base: "<%= yeoman.dist %>"
        }
      }
    },
    jshint: {
      options: {
        jshintrc: ".jshintrc",
        reporter: require("jshint-stylish")
      },
      all: {
        src: ["Gruntfile.js"]
      }
    },
    clean: {
      dist: {
        files: [
          {
            dot: true,
            src: [".tmp", "<%= yeoman.dist %>/{,*/}*", "!<%= yeoman.dist %>/.git{,*/}*"]
          }
        ]
      },
      server: ".tmp",
      views: "<%= yeoman.dist %>/views"
    },
    autoprefixer: {
      options: {
        browsers: ["last 1 version"]
      },
      dist: {
        files: [
          {
            expand: true,
            cwd: ".tmp/styles/",
            src: "{,*/}*.css",
            dest: ".tmp/styles/"
          }
        ]
      }
    },
    wiredep: {
      app: {
        src: ["<%= yeoman.app %>/index.jade"],
        ignorePath: /\.\.\//
      },
      sass: {
        src: ["<%= yeoman.app %>/styles/{,*/}*.{scss,sass}"],
        ignorePath: /(\.\.\/){1,2}bower_components\//
      }
    },
    coffee: {
      options: {
        sourceMap: true,
        sourceRoot: ""
      },
      dist: {
        files: [
          {
            expand: true,
            cwd: "<%= yeoman.app %>/scripts",
            src: "{,*/}*.coffee",
            dest: ".tmp/scripts",
            ext: ".js"
          }
        ]
      },
      test: {
        files: [
          {
            expand: true,
            cwd: "test/spec",
            src: "{,*/}*.coffee",
            dest: ".tmp/spec",
            ext: ".js"
          }
        ]
      }
    },
    compass: {
      options: {
        sassDir: "<%= yeoman.app %>/styles",
        cssDir: ".tmp/styles",
        generatedImagesDir: ".tmp/images/generated",
        imagesDir: "<%= yeoman.app %>/images",
        javascriptsDir: "<%= yeoman.app %>/scripts",
        fontsDir: "<%= yeoman.app %>/styles/fonts",
        importPath: "./bower_components",
        httpImagesPath: "/images",
        httpGeneratedImagesPath: "/images/generated",
        httpFontsPath: "/styles/fonts",
        relativeAssets: false,
        assetCacheBuster: false,
        raw: "Sass::Script::Number.precision = 10\n"
      },
      dist: {
        options: {
          generatedImagesDir: "<%= yeoman.dist %>/images/generated"
        }
      },
      server: {
        options: {
          debugInfo: true
        }
      }
    },
    filerev: {
      dist: {
        src: ["<%= yeoman.dist %>/scripts/{,*/}*.js", "<%= yeoman.dist %>/styles/{,*/}*.css", "<%= yeoman.dist %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}", "<%= yeoman.dist %>/styles/fonts/*"]
      }
    },
    useminPrepare: {
      html: "<%= yeoman.tmp %>/index.html",
      options: {
        dest: "<%= yeoman.dist %>",
        flow: {
          html: {
            steps: {
              js: ["concat", "uglifyjs"],
              css: ["cssmin"]
            },
            post: {}
          }
        }
      }
    },
    usemin: {
      html: ["<%= yeoman.dist %>/{,*/}*.html"],
      css: ["<%= yeoman.dist %>/styles/{,*/}*.css"],
      js: ["<%= yeoman.dist %>/scripts/{,*/}*.js"],
      options: {
        assetsDirs: ["<%= yeoman.dist %>", "<%= yeoman.dist %>/images"],
        patterns: {
          js: [[/(images\/.*?\.(?:gif|jpeg|jpg|png|webp))/gm, 'Update the JS to reference our revved images']]
        }
      }
    },
    imagemin: {
      dist: {
        files: [
          {
            expand: true,
            cwd: "<%= yeoman.app %>/images",
            src: "{,*/}*.{png,jpg,jpeg,gif}",
            dest: "<%= yeoman.dist %>/images"
          }
        ]
      }
    },
    svgmin: {
      dist: {
        files: [
          {
            expand: true,
            cwd: "<%= yeoman.app %>/images",
            src: "{,*/}*.svg",
            dest: "<%= yeoman.dist %>/images"
          }
        ]
      }
    },
    htmlmin: {
      dist: {
        options: {
          collapseWhitespace: true,
          conservativeCollapse: true,
          collapseBooleanAttributes: true,
          removeCommentsFromCDATA: true,
          removeOptionalTags: true
        },
        files: [
          {
            expand: true,
            cwd: "<%= yeoman.dist %>",
            src: ["*.html"],
            dest: "<%= yeoman.dist %>"
          }
        ]
      }
    },
    ngAnnotate: {
      dist: {
        files: [
          {
            expand: true,
            cwd: ".tmp/concat/scripts",
            src: ["*.js", "!oldieshim.js"],
            dest: ".tmp/concat/scripts"
          }
        ]
      }
    },
    cdnify: {
      dist: {
        html: ["<%= yeoman.dist %>/*.html"]
      }
    },
    copy: {
      dist: {
        files: [
          {
            expand: true,
            dot: true,
            cwd: "<%= yeoman.app %>",
            dest: "<%= yeoman.dist %>",
            src: ["*.{ico,png,txt}", ".htaccess", "*.html", "views/{,*/}*.html", "images/{,*/}*.{webp}", "fonts/{,*/}*.*"]
          }, {
            expand: true,
            cwd: ".tmp/images",
            dest: "<%= yeoman.dist %>/images",
            src: ["generated/*"]
          }, {
            expand: true,
            dot: true,
            cwd: "<%= yeoman.tmp %>",
            dest: "<%= yeoman.dist %>",
            src: ["*.html", "views/{,*/}*.html"]
          }
        ]
      },
      styles: {
        expand: true,
        cwd: "<%= yeoman.app %>/styles",
        dest: ".tmp/styles/",
        src: "{,*/}*.css"
      }
    },
    concurrent: {
      server: ["jade", "coffee:dist", "compass:server"],
      test: ["jade", "coffee", "stylus"],
      dist: ["coffee", "compass:dist", "imagemin", "svgmin"]
    },
    karma: {
      unit: {
        configFile: "test/karma.conf.coffee",
        singleRun: true
      }
    },
    jade: {
      dev: {
        files: {
          '<%= yeoman.tmp %>': ['<%= yeoman.app %>/index.jade'],
          '<%= yeoman.tmp %>/views': ['<%= yeoman.app %>/views/{,*/}*.jade']
        },
        options: {
          pretty: true,
          client: false
        }
      }
    },
    stylus: {
      compile: {
        files: {
          "<%= yeoman.tmp %>/styles/main.css": "<%= yeoman.app %>/styles/main.styl"
        }
      }
    },
    ngtemplates: {
      app: {
        cwd: "<%= yeoman.tmp %>",
        src: "views/{,*/}*.html",
        dest: "<%= yeoman.tmp %>/scripts/templates.js",
        options: {
          usemin: "scripts/app.js",
          url: function(url) {
            return url.replace(".html", "");
          },
          htmlmin: {
            collapseWhitespace: true,
            collapseBooleanAttributes: true
          }
        }
      }
    }
  });
  grunt.registerTask("serve", "Compile then start a connect web server", function(target) {
    if (target === "dist") {
      grunt.task.run(["build", "connect:dist:keepalive"]);
    }
    return grunt.task.run(["clean:server", "wiredep", "concurrent:server", "autoprefixer", "connect:livereload", "watch"]);
  });
  grunt.registerTask("server", "DEPRECATED TASK. Use the \"serve\" task instead", function(target) {
    grunt.log.warn("The `server` task has been deprecated. Use `grunt serve` to start a server.");
    return grunt.task.run(["serve:" + target]);
  });
  grunt.registerTask("test", ["clean:server", "concurrent:test", "autoprefixer", "connect:test", "karma"]);
  grunt.registerTask("build", ["clean:dist", "wiredep", "jade", "useminPrepare", "concurrent:dist", "autoprefixer", "ngtemplates", "concat", "ngAnnotate", "copy:dist", "cssmin", "uglify", "filerev", "usemin", "clean:views", "htmlmin"]);
  return grunt.registerTask("default", ["newer:jshint", "build"]);
};
